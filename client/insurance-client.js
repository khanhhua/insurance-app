var mod = angular.module('app', ['ngRoute']);

mod.service('web3', function () {
	var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));

	return web3;
});

mod.service('insuranceService', ['$q', 'web3', function ($q, web3) {
	var abi = [{"constant":false,"inputs":[],"name":"payPremium","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"description","type":"string"},{"name":"lossValue","type":"uint256"}],"name":"claimLoss","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"receivePayout","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"viewPayout","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getPolicyNo","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"claimNo","type":"uint8"},{"name":"lossValue","type":"uint256"}],"name":"confirmLoss","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"claimNo","type":"uint8"}],"name":"payForClaim","outputs":[{"name":"","type":"string"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"getInsuredAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"policyNo_","type":"string"},{"name":"insuredAmount_","type":"uint256"},{"name":"policyHolder_","type":"address"},{"name":"policyVendor_","type":"address"},{"name":"incidentAuthority_","type":"address"}],"payable":true,"stateMutability":"payable","type":"constructor"}];
	var contract = web3.eth.contract(abi);

	var contractBytecode = '6060604052604051610f80380380610f8083398101604052808051820191906020018051906020019091908051906020019091908051906020019091908051906020019091905050846000908051906020019061005d9291906103dd565b508360058190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408051908101604052808373ffffffffffffffffffffffffffffffffffffffff168152602001600181525060066000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408051908101604052808473ffffffffffffffffffffffffffffffffffffffff168152602001600281525060066000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408051908101604052808273ffffffffffffffffffffffffffffffffffffffff168152602001600381525060066000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505060006004819055505050505050610482565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061041e57805160ff191683800117855561044c565b8280016001018555821561044c579182015b8281111561044b578251825591602001919060010190610430565b5b509050610459919061045d565b5090565b61047f91905b8082111561047b576000816000905550600101610463565b5090565b90565b610aef806104916000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806329c08ba2146100915780632f6e0f951461009b5780637e872ad614610115578063abe855c21461013e578063b490ed8c14610167578063b788fb89146101f5578063c027fae11461029d578063d66c39d714610331575b600080fd5b61009961035a565b005b34156100a657600080fd5b6100ff600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610385565b6040518082815260200191505060405180910390f35b341561012057600080fd5b610128610450565b6040518082815260200191505060405180910390f35b341561014957600080fd5b61015161057b565b6040518082815260200191505060405180910390f35b341561017257600080fd5b61017a61063a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ba57808201518184015260208101905061019f565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561020057600080fd5b610222600480803560ff169060200190919080359060200190919050506106e2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610262578082015181840152602081019050610247565b50505050905090810190601f16801561028f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6600480803560ff169060200190919050506107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f65780820151818401526020810190506102db565b50505050905090810190601f1680156103235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561033c57600080fd5b61034461092b565b6040518082815260200191505060405180910390f35b6000349050670de0b6b3a76400008181151561037257fe5b0460046000828254019250508190555050565b6000806001600780549050019050600780548060010182816103a79190610935565b9160005260206000209060050201600060a0604051908101604052808581526020018881526020018781526020016000815260200160001515815250909190915060008201518160000155602082015181600101908051906020019061040e929190610967565b50604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055505050508091505092915050565b600080600080915060078054905090505b6000811115610507576001151560076001830381548110151561048057fe5b906000526020600020906005020160040160009054906101000a900460ff16151514156104f9576007600182038154811015156104b957fe5b9060005260206000209060050201600301548201915060006007600183038154811015156104e357fe5b9060005260206000209060050201600301819055505b808060019003915050610461565b600082111561057357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561057257600080fd5b5b819250505090565b600080600080915060078054905090505b600081111561063257600115156007600183038154811015156105ab57fe5b906000526020600020906005020160040160009054906101000a900460ff1615151415610624576007600182038154811015156105e457fe5b90600052602060002090600502016003015482019150600060076001830381548110151561060e57fe5b9060005260206000209060050201600301819055505b80806001900391505061058c565b819250505090565b6106426109e7565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d85780601f106106ad576101008083540402835291602001916106d8565b820191906000526020600020905b8154815290600101906020018083116106bb57829003601f168201915b5050505050905090565b6106ea6109e7565b600060078054905090505b60008111156107e2578360ff1660076001830381548110151561071457fe5b90600052602060002090600502016000015414156107d6578260076001830381548110151561073f57fe5b90600052602060002090600502016002015414151561075d57600080fd5b600160076001830381548110151561077157fe5b906000526020600020906005020160040160006101000a81548160ff0219169083151502179055506040805190810160405280600281526020017f4f4b00000000000000000000000000000000000000000000000000000000000081525091506107e7565b806001900390506106f5565b600080fd5b5092915050565b6107f66109e7565b60008034915060078054905090505b60008111156108eb578360ff1660076001830381548110151561082457fe5b90600052602060002090600502016000015414156108df576001151560076001830381548110151561085257fe5b906000526020600020906005020160040160009054906101000a900460ff16151514156108de578160076001830381548110151561088c57fe5b9060005260206000209060050201600301819055506040805190810160405280600281526020017f4f4b0000000000000000000000000000000000000000000000000000000000008152509250610924565b5b80600190039050610805565b6040805190810160405280600f81526020017f434c41494d5f4e4f545f464f554e44000000000000000000000000000000000081525092505b5050919050565b6000600554905090565b8154818355818115116109625760050281600502836000526020600020918201910161096191906109fb565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109a857805160ff19168380011785556109d6565b828001600101855582156109d6579182015b828111156109d55782518255916020019190600101906109ba565b5b5090506109e39190610a56565b5090565b602060405190810160405280600081525090565b610a5391905b80821115610a4f57600080820160009055600182016000610a229190610a7b565b600282016000905560038201600090556004820160006101000a81549060ff021916905550600501610a01565b5090565b90565b610a7891905b80821115610a74576000816000905550600101610a5c565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610aa15750610ac0565b601f016020900490600052602060002090810190610abf9190610a56565b5b505600a165627a7a723058207cde11ae12ffb9698d5bad8584bdb21b164bfc5e3eddfeb6563426e3ba1e8c8e0029';

	function buyPolicy (policyNo, insuredAmount) {
		var deferred = $q.defer();

		var policyNo_ = policyNo;
		var insuredAmount_ = insuredAmount;
		var policyHolder_ = web3.eth.accounts[0];
		var policyVendor_ = web3.eth.accounts[1];
		var incidentAuthority_ = web3.eth.accounts[2];

	  contract.new(
		   policyNo_,
			 insuredAmount_,
		   policyHolder_,
		   policyVendor_,
		   incidentAuthority_,
		   {
		     from: web3.eth.accounts[0],
		     data: contractBytecode,
		     gas: '4700000'
		   }, function (e, contract){
		    if (e) {
					return deferred.reject(e);
				}
		    if (typeof contract.address !== 'undefined') {
					console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
					return deferred.resolve(contract);
		    }
		 });

		 return deferred.promise;
	}

	function notifyLoss (policyAddress, description, lossValue) {
		var instance = contract.at(policyAddress);
		var deferred = $q.defer();

		instance.claimLoss(description, lossValue, {
			from: web3.eth.accounts[0],
			gas: '4700000'
		}, function (e, result) {
			if (e) {
				return deferred.reject(e);
			}
			deferred.resolve(result);
		})

		return deferred.promise;
	}

	return {
		buyPolicy: buyPolicy,
		notifyLoss: notifyLoss
	};
}]);

mod.controller('BuyPolicyCtrl', ['$scope', 'insuranceService', BuyPolicyCtrl]);
function BuyPolicyCtrl($scope, insuranceService) {
	$scope.policyNo = null;
	$scope.insuredAmount = null;

	$scope.policy = null;

	$scope.onBuyClick = function () {
		insuranceService.buyPolicy($scope.policyNo, $scope.insuredAmount).then(function (contract) {
			$scope.policy = contract;
		})
	}
}

mod.controller('ClaimCtrl', ['$scope', 'web3', ClaimCtrl]);
function ClaimCtrl($scope, web3) {
	debugger
}

mod.config(['$locationProvider', '$routeProvider', function ($locationProvider, $routeProvider) {
	$locationProvider.html5Mode = false;

	$routeProvider.caseInsensitiveMatch = true;
	$routeProvider
	.when('/buy', {
		controller: 'BuyPolicyCtrl',
		templateUrl: '/templates/buy.html'
	})
	.when('/claim', {
		// controller: 'ClaimCtrl',
		templateUrl: '/templates/claim.html'
	})
	.when('/', {
		templateUrl: '/templates/home.html'
	});
}]);
